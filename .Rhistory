BETS.search(src = "FGv-IBRE", view = F, lang = "pt")
BETS.search(src = "FGvIBRE", view = F, lang = "pt")
BETS.search(src = "FGVIBRE", view = F, lang = "pt")
BETS.search(src = "FGV-IBRE", view = F, lang = "pt")
BETS.search(src = "FGv-IBRE", view = F, lang = "pt")
shiny::runApp('novo')
runApp('novo')
runApp('novo')
=======
shiny::runApp('smartibre_free')
install.packages("shinythemes")
runApp('smartibre_free')
install.packages("shinyBSâ€™")
install.packages("shinyBS")
runApp('smartibre_free')
>>>>>>> 6159c9f7338582cd0154d7f3919ad2cea6d4be7f
shiny::runApp('smartibre')
a <- c("1212","1213")
sapply(a, FUN = BETS.get)
BETS.get(a)
BETS.get(a, data.frame = T)
unlist(sapply(a, FUN = BETS.get))
b <- sapply(a, FUN = BETS.get)
do.call(cbind, b)
baixar.list <- a
baixar.df <- do.call(cbind, baixar.list)
baixar.list
baixar.list <- b
baixar.df <- do.call(cbind, baixar.list)
baixar.df
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
shiny::runApp('smartibre')
shiny::runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
library(RColorBrewer)
runApp('smartibre')
runApp('smartibre')
ncol(AirPassengers)
runApp('smartibre')
runApp('smartibre')
array(1:3, c(2,4))
a <- array(1:3, c(2,4,1))
array(1:3, c(2,4,1))
array(1:3, c(2,4,2))
runApp('smartibre')
m <- dygraph(AirPassengers)
library(devtools)
install_github("wch/webshot")
## load packages
library(leaflet)
library(htmlwidgets)
library(webshot)
library(webshot)
library(BETS)
saveWidget(m, "temp.html", selfcontained = FALSE)
saveWidget(m, "temp.png", selfcontained = FALSE)
Sys.time()
Sys.Date()
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
shiny::runApp('smartibre')
baixar.df <- BETS.get(1212)
baixar.df
frame <- data.frame(data = zoo::as.Date(baixar.df),  baixar.df)
colnames(frame) <- c("Data", consultar_codigos$data)
frame
colnames(frame) <- c("Data", "1212")
frame
runApp('smartibre')
as.Date(baixar.df)
runApp('smartibre')
shiny::runApp('smartibre')
shiny::runApp('smartibre')
print( ts(1:10, frequency = 7, start = c(12, 2)), calendar = TRUE)
ts(1:10, frequency = 7, start = c(12, 2))
print( ts(1:10, frequency = 7, start = c(12, 2)), calendar = TRUE)
runApp('smartibre')
library(shinyBS)
library(shinyjs)
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
BETS.get("432")
x <- BETS.get("432")
class(x)
BETS.get("22109")
selecionados <- c("432","22109")
periodo <- BETS.search(selecionados)
periodo <- BETS.search(selecionados, view = F)
periodo
periodo <- BETS.search(selecionados, view = F)$periodicity
periodo
periodo <- unique(BETS.search(selecionados, view = F)$periodicity)
periodo
BETS.get("22109", data.frame = T)
baixar.df <- as.xts(BETS.get(selecionados, data.frame = T))
libary(xts)
library(xts)
baixar.df <- as.xts(BETS.get(selecionados, data.frame = T))
baixar.df
BETS.get(selecionados, data.frame = T)
df <- xts(st[,2], xts[,1])
st <- BETS.get(selecionados, data.frame = T)
df <- xts(st[,2], xts[,1])
st
st
st[,2]
xts[,1]
df <- xts(st[,2], st[,1])
df
colnames(frame) <- c("Data", selecionados)
colnames(df) <- c("Data", selecionados)
df
names(df)
colnames(df)
colnames(df) <- selecionados
names(df) <- selecionados
selecionados
selecionados <- "432"
names(df) <- selecionados
df
selecionados <- c("22109","22009")
baixar.list <- sapply(selecionados, FUN = BETS.get, data.frame = T)
selecionados <- c("22109","432")
baixar.list <- sapply(selecionados, FUN = BETS.get, data.frame = T)
baixar.list
baixar.list <- sapply(selecionados, FUN = BETS.get)
baixar.list
baixar.list <- lapply(selecionados, FUN = BETS.get, data.frame = T)
baixar.list
baixar.list <- sapply(selecionados, FUN = BETS.get, data.frame = T)
baixar.list
baixar.list <- tapply(selecionados, FUN = BETS.get, data.frame = T)
baixar.list <- lapply(selecionados, FUN = BETS.get, data.frame = T)
names(baixar.list)
names(baixar.list) <- selecionados
baixar.list
baixar.list$`22109`
lapply(baixar.list, xts)
lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1]))
baixar.df <- do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1])))
baixar.df
baixar.list
df <- do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1])))
head(df)
df <- do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1])))
names(df)
names(df) <- selecionados
df
dygraph(df)
dim(df)
selecionados = "432"
st <- BETS.get(selecionados, data.frame = T)
df <- xts(st[,2], st[,1])
names(df) <- selecionados
dim(df)
runApp('smartibre')
df
as.data.frame(df)
head(as.data.frame(df))
dygraph(df)
frame <- data.frame(data = index(df), df)
frame
head(frame)
data.frame(df)
rownames(frame) <- 1:nrow(frame)
frame <- data.frame(data = index(df), df)
rownames(frame) <- 1:nrow(frame)
head(frame)
colnames(frame) <- c("data", selecionados)
head(frame)
selecionados
selecionados <- c("432","433")
baixar.list <- lapply(selecionados, FUN = BETS.get, data.frame = T)
names(baixar.list) <- selecionados
df <- do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1])))
names(df) <- selecionados
df
class(df)
st <- do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1])))
names(st) <- selecionados
frame <- data.frame(data = index(st), st)
rownames(frame) <- 1:nrow(frame)
colnames(frame) <- c("data", selecionados)
st
head(st)
head(frame)
runApp('smartibre')
selecionados = "432"
BETS.search(selecionados, view = F)
periodo <- unique(BETS.search(code = selecionados, view = F)$periodicity)
periodo
runApp('smartibre')
st
dygraph(st) %>%
dySeries(name = "V1", label = series_consultar()$nomes) %>%
dyOptions(colors = brewer.pal(9, "Set1")) %>%
dyRangeSelector(fillColor = "#F7F7F7")
dygraph(st) %>%
dySeries(name = "V1", label = selecionados) %>%
dyOptions(colors = brewer.pal(9, "Set1")) %>%
dyRangeSelector(fillColor = "#F7F7F7")
selecionados
selecionados ,_ c
selecionados <- c("432","433")
selecionados <- c("432")
dygraph(st) %>%
dySeries(name = "V1", label = selecionados) %>%
dyOptions(colors = brewer.pal(9, "Set1")) %>%
dyRangeSelector(fillColor = "#F7F7F7")
st
st <- st[,1]
dygraph(st) %>%
dySeries(name = "V1", label = selecionados) %>%
dyOptions(colors = brewer.pal(9, "Set1")) %>%
dyRangeSelector(fillColor = "#F7F7F7")
dygraph(st) %>%
dySeristes(name = "V1", label = selecionados) %>%
dyOptions(colors = brewer.pal(9, "Set1")) %>%
dyRangeSelector(fillColor = "#F7F7F7")
st
dygraph(st)
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
dygraph(NULL)
dygraph(data = NULL)
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
selecionados <- c("432",1831)
selecionados <- c("432","1831")
periodo <- unique(BETS.search(code = selecionados, view = F)$periodicity)
selecionados
data <- data.frame(t(sapply(as.numeric(selecionados), FUN = function(x){BETS.search(code = x, view = F)})))
data
data <- data.frame(t(sapply(as.numeric(selecionados), FUN = function(x){BETS.search(code = x, view = F)})))$periodicity
data
data <- t(sapply(as.numeric(selecionados), FUN = function(x){BETS.search(code = x, view = F)})))$periodicity
data <- t(sapply(as.numeric(selecionados), FUN = function(x){BETS.search(code = x, view = F)}))$periodicity
data
data <- t(sapply(as.numeric(selecionados), FUN = function(x){BETS.search(code = x, view = F)}))
data
data.frame(t(sapply(as.numeric(selecionados), FUN = function(x){BETS.search(code = x, view = F)})))
data <- unlist(data.frame(t(sapply(as.numeric(selecionados), FUN = function(x){BETS.search(code = x, view = F)})))$periodicity)
data
periodo <- unique(unlist(data.frame(t(sapply(as.numeric(selecionados), FUN = function(x){BETS.search(code = x, view = F)})))$periodicity))
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
selecionados <- c("432","433")
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
a <- "432, 433"
a
strsplit(a, ",")
strsplit(a, ",")[[1]]
BETS.get(" 433")
codigo_y <- "432"
codigo_x <- "433"
codigo_y <- "432"
codigo_x <- "433"
baixar.list <- lapply(c(codigo_y,codigo_x), FUN = BETS.get, data.frame = T)
baixar.list
names(baixar.list) <- selecionados
st <- do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1])))
st
st <- na.omit(do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1]))))
st
names(st) <- selecionados
names(st) <- c(codigo_y,codigo_x)
frame <- data.frame(data = as.character(index(st)), st)
rownames(frame) <- 1:nrow(frame)
colnames(frame) <- c("data", selecionados)
st
frame
rownames(frame) <- 1:nrow(frame)
colnames(frame) <- c("data", selecionados)
head(frame)
colnames(frame) <- c("Periodo", selecionados)
baixar.list <- lapply(c(codigo_y,codigo_x), FUN = BETS.get, data.frame = T)
st <- na.omit(do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1]))))
frame <- data.frame(data = as.character(index(st)), st)
frame
rownames(frame) <- 1:nrow(frame)
colnames(frame) <- c("Periodo", selecionados)
frame
runApp('smartibre')
codigo_y <- "432"
codigo_x <- "433"
baixar.list <- lapply(c(codigo_y,codigo_x), FUN = BETS.get, data.frame = T)
st <- na.omit(do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1]))))
frame <- data.frame(data = as.character(index(st)), st)
rownames(frame) <- 1:nrow(frame)
colnames(frame) <- c("Periodo", selecionados)
frame
regressao_precotransformador = regressao_parametrica(frame, defx=1, defy=0, auto=TRUE)
colnames(frame)
colnames(frame) <- c("Periodo","x1","x2")
regressao_precotransformador = regressao_parametrica(frame, defx=1, defy=0, auto=TRUE)
library(glmulti)
regressao_precotransformador = regressao_parametrica(frame, defx=1, defy=0, auto=TRUE)
regressao_precotransformador = regressao_parametrica(frame, defx=0, defy=0, auto=TRUE)
regressao_precotransformador = regressao_parametrica(frame, defx=1, defy=0, auto=TRUE)
runApp('smartibre')
runApp('smartibre')
codigo_y
baixar.list <- lapply(c(codigo_y,codigo_x), FUN = BETS.get, data.frame = T)
st <- na.omit(do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1]))))
frame <- data.frame(data = as.character(index(st)), st)
rownames(frame) <- 1:nrow(frame)
colnames(frame) <- c("Periodo", paste0("x_", selecionados))
frame
m <- regressao_parametrica(frame, defx = 1, defy = 0, auto = TRUE)
m
m
m$serie_ajustada
runApp('smartibre')
source('C:/Users/daiane.mattos/Dropbox/Github/SmartIBRE/smartibre/data/funcoes_parametrico.R', encoding = 'UTF-8')
runApp('smartibre')
source('C:/Users/daiane.mattos/Dropbox/Github/SmartIBRE/smartibre/data/funcoes_parametrico.R', encoding = 'UTF-8')
m <- regressao_parametrica(frame, defx = 1, defy = 0)
m
runApp('smartibre')
runApp('smartibre')
codigo_y="432"
codigo_x="433"
baixar.list <- lapply(c(codigo_y,codigo_x), FUN = BETS.get, data.frame = T)
st <- na.omit(do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1]))))
frame <- data.frame(data = as.character(index(st)), st)
rownames(frame) <- 1:nrow(frame)
colnames(frame) <- c("Periodo", paste0("y_",codigo_y),paste0("x_",codigo_x))
m <- regressao_parametrica(frame, defx = 1, defy = 0)
m$serie_ajustada
runApp('smartibre')
baixar.list <- lapply(c(codigo_y,codigo_x), FUN = BETS.get, data.frame = T)
st <- na.omit(do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1]))))
frame <- data.frame(data = as.character(index(st)), st)
rownames(frame) <- 1:nrow(frame)
colnames(frame) <- c("Periodo", paste0("y_",codigo_y),paste0("x_",codigo_x))
m <- regressao_parametrica(frame, defx = 1, defy = 0)
m$serie_ajustada
m
class(frame)
str(frame)
frame <- data.frame(data = as.character(index(st)), st)
str(frame)
st
baixar.list <- lapply(c(codigo_y,codigo_x), FUN = BETS.get, data.frame = T)
st <- na.omit(do.call(cbind, lapply(baixar.list, FUN = function(x) xts(x[,2],x[,1]))))
frame <- data.frame(data = as.character(index(st)), st)
rownames(frame) <- 1:nrow(frame)
colnames(frame) <- c("Periodo", paste0("y_",codigo_y), paste0("x_",codigo_x))
frame
str(frame)
frame[,1] <- as.character(frame[,1])
m <- regressao_parametrica(frame, defx = 1, defy = 0)
m$serie_ajustada
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
shiny::runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
require(xlsx)
setwd("V:\\SUEP\\NÃºcleo de MÃ©todos EstatÃ­sticos e Computacionais\\18 Modelo ParamÃ©trico\\04 ModeloParametrico_Regressao")
# Ler s?rie hist?rica de interesse
serie_original <- read.xlsx("Series_historicas.xlsx", 1, header=TRUE)
# Carregar fun??es
source("Funcoes_indparam_semgraficos.R")
# Regress?o linear para a varia??o do pre?o do tranformador
require(glmulti)
regressao_precotransformador = regressao_parametrica(serie_original, defx=1, defy=0, auto=TRUE)
indiceparametrico_fixo = indparam_fixo(serie_original, coef=c(0.3,0.7),
covar=c("IPA", "Prod_Sid"))
indiceparametrico_fixo$Preco_Parametrico
indiceparametrico_fixo$PrecoParametrico_acumulado
indiceparametrico_fixo$Preco_Transformador
ts.plot(indiceparametrico_fixo$PrecoParametrico_acumulado,
indiceparametrico_fixo$Preco_Transformador)
serie_original
indiceparametrico_fixo$Preco_Transformador
runApp('C:/Users/daiane.mattos/Dropbox/Github/SmartIBRE/smartibre')
runApp('C:/Users/daiane.mattos/Dropbox/Github/SmartIBRE/smartibre')
runApp('C:/Users/daiane.mattos/Dropbox/Github/SmartIBRE/smartibre')
runApp('C:/Users/daiane.mattos/Dropbox/Github/SmartIBRE/smartibre')
runApp('C:/Users/daiane.mattos/Dropbox/Github/SmartIBRE/smartibre')
shiny::runApp('smartibre')
codigos <- c("ST_100.0", "ST_100.1")
data <- data.frame(t(sapply(as.numeric(codigos), FUN = function(x){BETS.search(code = x, view = F)})))
data
BETS.search(code = codigos[1])
as.numeric(codigos)
runApp('smartibre')
runApp('smartibre')
shiny::runApp('smartibre')
library(R.matlab, Matrix)
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
install.packages("shinyLP")
runApp('smartibre')
runApp('smartibre')
shiny::runApp('smartibre')
shiny::runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
shiny::runApp('smartibre')
shiny::runApp('smartibre')
runApp('C:/Users/daiane.mattos/Dropbox/Dashboard_inflation')
runApp('C:/Users/daiane.mattos/Dropbox/Dashboard_inflation')
runApp('smartibre')
library(zoo)
zd <- read.zoo(text = Lines, header = TRUE)
tt <- as.yearmon(seq(start(zd), end(zd), "month"))
zm <- na.spline(zd, as.yearmon, xout = tt)
data(Lines)
shiny::runApp('smartibre')
library(shiny)
library(shinydashboard)
library(shinythemes)
library(shinyBS)
library(BETS)
library(DBI)
library(RMySQL)
library(DT)
library(dygraphs)
library(RColorBrewer)
library(htmlwidgets)
library(zoo)
library(shinyjs)
library(xts)
library(glmulti)
install.packages("glmulti")
runApp('smartibre')
shiny::runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
shiny::runApp('smartibre')
runApp('smartibre')
shiny::runApp('smartibre')
install.packages("glmulti")
installed.packages("rjava")
installed.packages("LinkingTo")
installed.packages("LibPath")
installed.packages("rjava")
install.packages("glmulti")
library("rJava", lib.loc="/usr/lib/R/site-library")
library("rJava", lib.loc="/usr/lib/R/site-library")
install.packages("libjvm")
shiny::runApp('smartibre')
install.packages("glmulti")
installed.packages("rjava")
