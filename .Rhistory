mean(c(24,25,26,24,28,27,23,22,25,27))
sd(c(24,25,26,24,28,27,23,22,25,27))
meadin(c(24,25,26,24,28,27,23,22,25,27))
median(c(24,25,26,24,28,27,23,22,25,27))
hist(c(24,25,26,24,28,27,23,22,25,27))
plot(c(24,25,26,24,28,27,23,22,25,27))
plot(c(24,25,26,24,28,27,24,22,25,27))
mean(c(24,25,26,24,28,27,24,22,25,27))
mean(c(24,25,26,24,28,27,24,23,25,27))
mean(c(24,25,26,24,28,27,24,23,25,27,36))
sd(c(24,25,26,24,28,27,24,23,25,27,36))
sd(c(24,25,26,24,28,27,24,23,25,27))
library(shinydashboard)
dashboardPage(skin = "blue", title = "SMARTIBRE",
dashboardHeader(title = ""),
dashboardSidebar(),
dashboardBody()
)
shiny::runApp('novo')
install.packages("sourcetools")
install.packages("sourcetools")
shiny::runApp('novo')
messageData
mensagens <- data.frame(from = c("Joninho", "Talitha"), message = c("Oi, Benina", "Bizarro!"))
runApp('novo')
mensagens <- data.frame(from = c("Joninho", "Talitha"), message = c("Oi, Benina", "Bizarro!"))
mensagens
runApp('novo')
mensagens <- data.frame(from = c("Joninho", "Talitha"), message = c("Oi, Benina", "Bizarro!"))
msgs <- apply(mensagens, 1, function(row) {
messageItem(from = row[["from"]], message = row[["message"]])
})
msgs
runApp('novo')
library(plotly)
library(rmarkdown)
shiny::runApp('novo')
runApp('novo')
runApp('novo')
runApp('novo')
shiny::runApp()
library(shiny)
library(shinydashboard)
library(shinythemes)
library(shinyBS)
shiny::runApp('novo')
shiny::runApp('novo')
runApp('novo')
dropdownMenu(type = "notifications",
notificationItem(
text = "5 new users today",
icon("users")
),
notificationItem(
text = "12 items delivered",
icon("truck"),
status = "success"
),
notificationItem(
text = "Server load at 86%",
icon = icon("exclamation-triangle"),
status = "warning"
)
)
mensagens <- data.frame(text = c("Joninho", "Talitha"), status = c("Oi, Benina", "Bizarro!"))
msgs <- apply(mensagens, 1, function(row) {
notificationItem(text = row[["text"]], status = row[["status"]])
})
mensagens <- data.frame(text = c("Joninho", "Talitha"), status = c("sucess","warning"))
msgs <- apply(mensagens, 1, function(row) {
notificationItem(text = row[["text"]], status = row[["status"]])
})
mensagens <- data.frame(text = c("Joninho", "Talitha"), status = c("success","warning"))
msgs <- apply(mensagens, 1, function(row) {
notificationItem(text = row[["text"]], status = row[["status"]])
})
msgs
runApp('novo')
library(BETS)
library(BETS)
runApp('novo')
runApp('novo')
runApp('novo')
BETS.search(code = 1)
a <- BETS.search(code = 1)
a
a <- BETS.search(code = 1, view = F)
a
runApp('novo')
runApp('novo')
BETS.search(code = 1, view = F, lang = "pt")
BETS.search(code = "1", view = F, lang = "pt")
BETS.search(code = 1, view = F)
runApp('novo')
a <- BETS.search(code = 1, view = F)
a
download <- a
BETS.search(code = 1, view = F, lang = "pT")
BETS.search(code = 1, view = F, lang = "pt")
BETS.search(code = 1, view = F)
runApp('novo')
runApp('novo')
runApp('novo')
runApp('novo')
runApp('novo')
runApp('novo')
runApp('novo')
BETS.search(code = 1, view = F)
BETS.search(code = "PIB TRIMESTRAL", view = F, lagn = "pt")
BETS.search(code = "PIB TRIMESTRAL", view = F, lang = "pt")
a <- BETS.search(code = "pib", view = F, lang = "pt")
a <- BETS.search(description = "pib trimestral", view = F, lang = "pt")
a
runApp('novo')
library(DBI)
library(RMySQL)
<<<<<<< HEAD
shiny::runApp('novo')
runApp('novo')
runApp('novo')
runApp('novo')
runApp('novo')
a <- BETS.search(code = 1, view = F)
a
a <- BETS.search(code = c(1,2), view = F)
a <- BETS.search(code = c(2), view = F)
a
a <- BETS.search(code = 2, view = F)
a <- BETS.search(code = 22109, view = F)
a
a <- BETS.search(code = 433, view = F)
a
runApp('novo')
BETS.search(src = "IBGE", view = F, lang = "pt")
BETS.search(src = "FGV", view = F, lang = "pt")
BETS.search(src = "FGV-BRE", view = F, lang = "pt")
BETS.search(src = "FGV-IBRE", view = F, lang = "pt")
BETS.search(src = "FGv-IBRE", view = F, lang = "pt")
BETS.search(src = "FGvIBRE", view = F, lang = "pt")
BETS.search(src = "FGVIBRE", view = F, lang = "pt")
BETS.search(src = "FGV-IBRE", view = F, lang = "pt")
BETS.search(src = "FGv-IBRE", view = F, lang = "pt")
shiny::runApp('novo')
runApp('novo')
runApp('novo')
=======
shiny::runApp('smartibre_free')
install.packages("shinythemes")
runApp('smartibre_free')
install.packages("shinyBSâ€™")
install.packages("shinyBS")
runApp('smartibre_free')
>>>>>>> 6159c9f7338582cd0154d7f3919ad2cea6d4be7f
shiny::runApp('smartibre')
a <- c("1212","1213")
sapply(a, FUN = BETS.get)
BETS.get(a)
BETS.get(a, data.frame = T)
unlist(sapply(a, FUN = BETS.get))
b <- sapply(a, FUN = BETS.get)
do.call(cbind, b)
baixar.list <- a
baixar.df <- do.call(cbind, baixar.list)
baixar.list
baixar.list <- b
baixar.df <- do.call(cbind, baixar.list)
baixar.df
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
shiny::runApp('smartibre')
shiny::runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
library(RColorBrewer)
runApp('smartibre')
runApp('smartibre')
ncol(AirPassengers)
runApp('smartibre')
runApp('smartibre')
array(1:3, c(2,4))
a <- array(1:3, c(2,4,1))
array(1:3, c(2,4,1))
array(1:3, c(2,4,2))
runApp('smartibre')
m <- dygraph(AirPassengers)
library(devtools)
install_github("wch/webshot")
## load packages
library(leaflet)
library(htmlwidgets)
library(webshot)
library(webshot)
library(BETS)
saveWidget(m, "temp.html", selfcontained = FALSE)
saveWidget(m, "temp.png", selfcontained = FALSE)
Sys.time()
Sys.Date()
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
runApp('smartibre')
shiny::runApp('smartibre')
baixar.df <- BETS.get(1212)
baixar.df
frame <- data.frame(data = zoo::as.Date(baixar.df),  baixar.df)
colnames(frame) <- c("Data", consultar_codigos$data)
frame
colnames(frame) <- c("Data", "1212")
frame
runApp('smartibre')
as.Date(baixar.df)
runApp('smartibre')
shiny::runApp('smartibre')
